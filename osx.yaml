---
- hosts: localhost
  tasks:
    - name: Install homebrew
      include_role:
        name: geerlingguy.mac.homebrew
      tags: core

    - name: Make sure homebrew bin is in path
      ansible.builtin.lineinfile:
        path: /etc/paths
        state: present
        line: '/opt/homebrew/bin'
      become: true
      become_user: root
      tags: core

    - name: 'add custom homebrew repos'
      community.general.homebrew_tap:
        name: [
          homebrew/cask-versions,
          thoughtbot/formulae,
          weaveworks/tap,
        ]
      tags: core

    - name: Install core packages via brew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
      ignore_errors: yes
      with_items:
        - 1password
        - android-sdk
        - android-studio
        - docker
        - figma
        - google-chrome
        - google-cloud-sdk
        - iterm2
        - ngrok
        - slack
        - visual-studio-code
      tags: packages

    - name: "Install homebrew packages"
      community.general.homebrew:
        name: [
          'autoconf',
          'automake',
          'coreutils',
          'curl',
          'fzf',
          'gpg',
          'htop',
          'kubectx',
          'kubernetes-cli',
          'kubernetes-helm',
          'openssl' ,
          'tmux',
          'unzip',
          'vim',
          'zlib',
          'zsh',
        ]
        state: present
        update_homebrew: yes
        tags: packages

    - name: "Install from Mac app store"
      shell: mas install {{ item }}
      with_items:
        - 497799835 # xcode
      tags: xcode

    - name: Get the path to ZSH
      become: false
      local_action: command which zsh
      register: zsh_path
      tags: zsh

    - name: "Ensure homebrew zsh is in allowed shells"
      lineinfile:
        path: /etc/shells
        line: "{{ zsh_path.stdout }}"
      become: true
      tags: zsh

    - name: Install Oh My ZSH
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      args:
        creates: "/Users/{{ lookup('env', 'USER') }}/.oh-my-zsh"
      tags: zsh

    - name: Set ZSH as the default shell
      shell: chsh -s $(which zsh) {{ lookup('env', 'USER') }}
      become: true
      tags: zsh

    # - name: Create a default VSCode configuration
    #   template:
    #     src: templates/vscode-settings.json.j2
    #     dest: /Users/{{ lookup('env', 'USER') }}/Library/Application Support/Code/User/settings.json
    #     owner: "{{ lookup('env', 'USER') }}"
    #     force: yes

    # - name: Create a default VSCode keybinding configuration
    #   template:
    #     src: templates/vscode-keybindings.json.j2
    #     dest: /Users/{{ lookup('env', 'USER') }}/Library/Application Support/Code/User/keybindings.json
    #     owner: "{{ lookup('env', 'USER') }}"
    #     force: yes

    # Add something which ensures path is set here
    # - name: Install VSCode extensions
    #   shell: code --install-extension {{ item }}
    #   with_items:
    #     -

    - git:
        repo: https://github.com/asdf-vm/asdf.git
        dest: "/Users/{{ lookup('env', 'USER') }}/.asdf"
        version: v0.9.0
      tags: asdf

    - name: "Install asdf plugins"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf plugin-add {{ item }} || exit 0
      with_items:
        - nodejs
      tags: asdf

    - name: "Install default node"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        bash /Users/{{ lookup('env', 'USER') }}/.asdf/plugins/nodejs/bin/import-release-team-keyring
        asdf install nodejs 16.13.2
        asdf global nodejs 16.13.2
      tags: asdf
        